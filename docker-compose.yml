volumes:
  db_storage:
  n8n_storage:
  dbadmin-data:

networks:
  n8n:

services:
  postgres:
    image: postgres:16
    container_name: postgres
    hostname: postgres
    restart: always
    env_file:
      - .env
      - ./config/database/.env
    volumes:
      - db_storage:/var/lib/postgresql/data
    networks:
      - n8n
    ports:
      - ${POSTGRES_PORT_MAPPING}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: ${N8N_CONTAINER_NAME}
    hostname: n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
    env_file:
      - .env
      - ./config/n8n/.env
    networks:
      n8n:
        aliases:
          - ${N8N_CONTAINER_NAME}
    depends_on:
      postgres:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4:7.1
    container_name: ${PGADMIN_CONTAINER_NAME}
    hostname: ${PGADMIN_HOSTNAME}
    env_file:
      - .env  
    networks:
      n8n:
        aliases:
          - ${PGADMIN_CONTAINER_NAME}
    expose:
      - ${PGADMIN_INTERNAL_PORT}
    volumes:
      - dbadmin-data:/var/lib/pgadmin

  caddy:
    image: caddy:2
    container_name: caddy
    ports:
      - "80:80"
    volumes:
      - ./config/reverse-proxy/Caddyfile:/etc/caddy/Caddyfile:ro
    env_file:
      - .env
    networks:
      - n8n
    depends_on:
      - pgadmin
      - n8n

