volumes:
  db_storage:
  n8n_storage:
  dbadmin-data:

networks:
  n8n-lab:

services:
  postgres:
    image: postgres:16
    container_name: postgres
    hostname: postgres
    restart: always
    env_file:
      - .env
      - ./config/database/.env
    volumes:
      - db_storage:/var/lib/postgresql/data
    networks:
      - n8n-lab
    ports:
      - ${POSTGRES_PORT_MAPPING}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    # image: docker.n8n.io/n8nio/n8n
    build:
      context: ./config/n8n
      dockerfile: Dockerfile
    image: n8n.lab:latest
    container_name: ${N8N_CONTAINER_NAME}
    hostname: n8n
    restart: always
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
    env_file:
      - .env
      - ./config/n8n/.env
      - ./config/ngrok/.env
    networks:
      n8n-lab:
        aliases:
          - ${N8N_CONTAINER_NAME}
    depends_on:
      ngrok:
        condition: service_started
      postgres:
        condition: service_healthy

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    env_file:
      - ./config/ngrok/.env
      - .env
    restart: always
    command: http ${N8N_CONTAINER_NAME}:${N8N_INTERNAL_PORT} --authtoken=${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    networks:
      - n8n-lab

  pgadmin:
    image: dpage/pgadmin4:7.1
    container_name: ${PGADMIN_CONTAINER_NAME}
    hostname: ${PGADMIN_HOSTNAME}
    env_file:
      - .env  
    networks:
      n8n-lab:
        aliases:
          - ${PGADMIN_CONTAINER_NAME}
    expose:
      - ${PGADMIN_INTERNAL_PORT}
    volumes:
      - dbadmin-data:/var/lib/pgadmin

  notebook:
    env_file:
      - .env
    build:
      context: ./config/notebook
      dockerfile: Dockerfile 
    image: notebook
    container_name: ${NOTEBOOK_CONTAINER_NAME}
    hostname: notebook
    ports:
      - ${NOTEBOOK_PORT_MAPPING}
    networks:
      n8n-lab:
        aliases:
          - ${NOTEBOOK_PORT_MAPPING}
    volumes:
      - ./src:/src

  caddy:
    image: caddy:2
    container_name: caddy
    ports:
      - "80:80"
    volumes:
      - ./config/reverse-proxy/Caddyfile:/etc/caddy/Caddyfile:ro
    env_file:
      - .env
    networks:
      - n8n-lab
    depends_on:
      - pgadmin
      - n8n

